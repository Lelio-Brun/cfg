add_newline = true
format = """
$username\
$hostname\
$shlvl\
$kubernetes\
$directory\
${custom.giturl}\
$git_branch\
$git_commit\
$git_state\
$git_status\
$hg_branch\
$docker_context\
$package\
$cmake\
$dart\
$dotnet\
$elixir\
$elm\
$erlang\
$golang\
$helm\
$java\
$julia\
$kotlin\
$nim\
$nodejs\
$ocaml\
${custom.opam_switch}\
$perl\
$php\
$purescript\
$python\
$ruby\
$rust\
$swift\
$terraform\
$zig\
$nix_shell\
$conda\
$memory_usage\
$aws\
$gcloud\
$openstack\
$env_var\
$crystal\
$custom\
$cmd_duration\
$line_break\
$lua\
$jobs\
$battery\
$time\
$status\
$character"""

[character]
success_symbol = "[❯](bold red)[❯](bold yellow)[❯](bold green)"
error_symbol = "[❯❯❯](bold red)"
vicmd_symbol = "[❮](bold red)[❮](bold yellow)[❮](bold green)"

[directory]
truncate_to_repo = false
style = "cyan"
fish_style_pwd_dir_length = 1

[git_branch]
symbol = " "
style = "purple"

[git_status]
style = "purple"
conflicted = "[≠$count](bold red)"
ahead = "[⇡$count](bold purple)"
behind = "[⇣$count](bold purple)"
diverged = "[$ahead_count⇕$behind_count](bold red)"
untracked = "?$count"
modified = "[*$count](yellow)"
renamed = "[»$count](yellow)"
staged = "[+$count](green)"
deleted = "[-$count](red)"

[status]
disabled = false
format = "[$symbol $status]($style) "
map_symbol = true

[ocaml]
style = "yellow"

[custom.giturl]
description = "Display symbol for remote Git server"
command = """
GIT_REMOTE=$(command git ls-remote --get-url 2> /dev/null)
if [[ "$GIT_REMOTE" =~ "github" ]]; then
    GIT_REMOTE_SYMBOL=" "
elif [[ "$GIT_REMOTE" =~ "gitlab" ]]; then
    GIT_REMOTE_SYMBOL=" "
elif [[ "$GIT_REMOTE" =~ "bitbucket" ]]; then
    GIT_REMOTE_SYMBOL=" "
elif [[ "$GIT_REMOTE" =~ "git" ]]; then
    GIT_REMOTE_SYMBOL=" "
else
    GIT_REMOTE_SYMBOL=" "
fi
echo "$GIT_REMOTE_SYMBOL "
"""
when = 'git rev-parse --is-inside-work-tree 2> /dev/null'
shell = ["bash", "--noprofile", "--norc"]
format = "at $output  "

[custom.opam_switch]
command = "fish_opam_switch"
files = [".merlin", "dune", "dune-project", "jbuild", "jbuild-ignore", "_tags", ".opam"]
directories = ["_opam"]
extensions = ["ml", "mli", "mll", "mly"]
shell = ["fish"]
format = '[\(](yellow)$output[\)](yellow) '
